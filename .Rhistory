from pathlib import Path
from shiny import App, render, ui
import openeo
import json
import numpy as np
from scipy.interpolate import make_interp_spline, BSpline
import pandas as pd
import matplotlib.pyplot as plt
from datetime import timedelta
# openeo connection and authentication
# https://open-eo.github.io/openeo-python-client/auth.html
## In Linux terminal :
## openeo-auth oidc-auth openeo.cloud
con = openeo.connect("openeo.cloud")
con.authenticate_oidc_device(store_refresh_token=True)
con
con.authenticate_oidc_device(store_refresh_token=True)
con.authenticate_oidc_device(store_refresh_token=True)
con.authenticate_oidc_device(store_refresh_token=True)
con
con.authenticate_oidc_device(store_refresh_token=True)
from pandas import Series
import numpy as np
N = 31
def apply_timeseries(series: Series, context: dict) -> Series:
return np.convolve(series, np.ones(N)/N, mode='same')
apply_timeseries()
0.15*8000
0.015*8000
1.5*8000/100
5571.65+435
6006-13368+8000
from pathlib import Path
from shiny import App, render, ui
import openeo
import json
import numpy as np
from scipy.interpolate import make_interp_spline, BSpline
import pandas as pd
import matplotlib.pyplot as plt
from datetime import timedelta
# openeo connection and authentication
# https://open-eo.github.io/openeo-python-client/auth.html
## In Linux terminal :
## openeo-auth oidc-auth openeo.cloud
con = openeo.connect("openeo.cloud")
con.authenticate_oidc_device(store_refresh_token=True)
con.authenticate_oidc()
with open('ma.py', 'r') as file:
udf_file = file.read()
udf = openeo.UDF(udf_file.format(n = moving_average_window))
moving_average_window = 31
udf = openeo.UDF(udf_file.format(n = moving_average_window))
udf_file
with open('ma.py', 'r') as file:
udf_file = file.read()
print(udf_file)
with open('ma.py', 'r') as file:
udf_file = file.read()
print(udf_file)
with open('ma.py', 'r') as file:
udf_file = file.read()
print(udf_file)
with open('ma.py', 'r') as file:
udf_file = file.read()
print(udf_file)
with open("data/time-series-mean.json", "r") as f:
reticulate::repl_python()
